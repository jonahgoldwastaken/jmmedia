name: RSync Staging deployment

on:
  pull_request:
    branches: [master]

jobs:
  install:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-node@v1
      with:
        node-version: 14

    - name: Load node_modules build cache
      uses: actions/cache@v1
      id: build_modules_cache
      with:
        path: ${{ github.workspace }}/node_modules
        key: ${{ runner.os }}-modules-build-${{ hashFiles('**/yarn.lock') }}
    
    - name: Install if no cache
      if: ${{ !steps.build_modules_cache.cache-hit }}
      run: yarn install --frozen-lockfile
    
  build_server:
    needs: [install]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-node@v1
      with:
        node-version: 14
        
    - name: Use node_modules cache
      uses: actions/cache@v1
      with:
        path: ${{ github.workspace }}/node_modules
        key: ${{ runner.os }}-modules-build-${{ hashFiles('**/yarn.lock') }}
        
    - name: Build deployment
      run: yarn build:server
    
    - name: Upload server build
      uses: actions/upload-artifact@v2
      with:
        name: server_build
        path: ${{ github.workspace }}/packages/server
  
  build_web:
    needs: [install]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-node@v1
      with:
        node-version: 14
        
    - name: Use node_modules cache
      uses: actions/cache@v1
      with:
        path: ${{ github.workspace }}/node_modules
        key: ${{ runner.os }}-modules-build-${{ hashFiles('**/yarn.lock') }}
        
    - name: Build deployment
      run: yarn build:web
    
    - name: Upload web build
      uses: actions/upload-artifact@v2
      with:
        name: web_build
        path: ${{ github.workspace }}/packages/web
  
  deploy:
    needs: [build_web, build_server]
    runs-on: ubuntu-latest
    steps:
    - name: Create Github deployment
      id: deployment
      uses: chrnorm/deployment-action@v1.2.0
      with:
        token: "${{ github.token }}"
        target_url: https://staging.jmmedia.nl
        environment: staging

    - uses: actions/checkout@v2
    - uses: actions/setup-node@v1
      with:
        node-version: 14

    - name: Download server build
      uses: actions/download-artifact@v2
      with:
        name: server_build
        path: ${{ github.workspace }}/packages/server

    - name: Download web build
      uses: actions/download-artifact@v2
      with:
        name: web_build
        path: ${{ github.workspace }}/packages/web

    - name: Load node_modules prod cache
      uses: actions/cache@v1
      id: prod_modules_cache
      with:
        path: ${{ github.workspace }}/node_modules
        key: ${{ runner.os }}-prod_modules_cache-${{ hashFiles('**/yarn.lock') }}

    - name: Yarn install if no cache
      if: ${{ !steps.build_modules_cache.cache-hit }}
      run: yarn install --prod --frozen-lockfile

    - name: Upload build
      uses: Burnett01/rsync-deployments@4.0
      with:
        remote_host: ${{secrets.DEPLOY_URL}}
        remote_user: ${{secrets.DEPLOY_USER}}
        remote_path: ${{secrets.STAGING_PATH}}
        switches: -avzr --delete --exclude '.git*' --exclude 'tsconfig.json' --exclude '.vscode' --exclude '**/tsconfig.json' --exclude '.prettierrc' --exclude '**/.git*'
        remote_key: ${{secrets.PRIVATE_KEY}}
        
    - name: Run SSH command
      uses: garygrossgarten/github-action-ssh@v0.5.0
      with:
        command: bash ~/staging.sh
        host: ${{secrets.DEPLOY_URL}}
        username: ${{secrets.DEPLOY_USER}}
        privateKey: ${{secrets.PRIVATE_KEY}}
        
    - name: Update deployment status (success)
      if: ${{ success() }}
      uses: chrnorm/deployment-status@releases/v1
      with:
        token: "${{ github.token }}"
        state: "success"
        deployment_id: ${{ steps.deployment.outputs.deployment_id }}

    - name: Update deployment status (failure)
      if: ${{ failure() }}
      uses: chrnorm/deployment-status@releases/v1
      with:
        token: "${{ github.token }}"
        state: "failure"
        deployment_id: ${{ steps.deployment.outputs.deployment_id }}

    - name: Update deployment status (cancelled)
      if: ${{ cancelled() }}
      uses: chrnorm/deployment-status@releases/v1
      with:
        token: "${{ github.token }}"
        state: "failure"
        deployment_id: ${{ steps.deployment.outputs.deployment_id }}
