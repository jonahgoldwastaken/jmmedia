# This workflow will do a clean install of node dependencies, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: RSync Staging Deployment

on: 
  pull_request:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-node@v1
      with:
        node-version: 14
    - name: jmmedia/web build cache
      uses: actions/cache@v1
      with:
        path: ${{ github.workspace }}/packages/web/.next/cache
        key: ${{ runner.os }}-nextjs-${{ hashFiles('packages/web/yarn.lock') }}
    - name: node_modules cache
      uses: actions/cache@v1
      with:
        path: ${{ github.workspace }}/node_modules
        key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
    - name: Yarn Install
      run: |
          yarn config set ignore-engines true
          yarn --frozen-lockfile
    - name: Yarn Build
      run: yarn build
      env:
        SERVER_URL: https://api.staging.jmmedia.nl
    - name: Yarn Production Install
      run: yarn install --prod --force --frozen-lockfile
    - name: Deploy
      uses: Burnett01/rsync-deployments@4.0
      with:
        remote_host: ${{secrets.DEPLOY_URL}}
        remote_user: ${{secrets.DEPLOY_USER}}
        remote_path: ${{secrets.STAGING_PATH}}
        switches: -avzr --delete --exclude '.git*' --exclude 'tsconfig.json' --exclude '.vscode' --exclude '**/tsconfig.json' --exclude '.prettierrc' --exclude '**/.git*'
        remote_key: ${{secrets.PRIVATE_KEY}}
    - name: Run SSH command
      uses: garygrossgarten/github-action-ssh@v0.5.0
      with:
        command: bash ~/staging.sh
        host: ${{secrets.DEPLOY_URL}}
        username: ${{secrets.DEPLOY_USER}}
        privateKey: ${{secrets.PRIVATE_KEY}}

        
