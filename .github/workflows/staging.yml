name: RSync Production deployment

on:
  push:
    branches: [ master ]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-node@v1
      with:
        node-version: 14
        
    - name: Prepare Next.JS build cache
      uses: actions/cache@v1
      with:
        path: ${{ github.workspace }}/packages/web/.next/cache
        key: ${{ runner.os }}-nextjs-${{ hashFiles('packages/web/yarn.lock') }}

    - name: Prepare node_modules cache
      uses: actions/cache@v1
      with:
        path: ${{ github.workspace }}/node_modules
        key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
        
    - name: Create deployment
      id: staging-deployment
      uses: chrnorm/deployment-action@v1.2.0
      with:
        token: "${{ github.token }}"
        target_url: https://staging.jmmedia.nl
        environment: staging
        
    - name: Build deployment
      run: |
          yarn config set ignore-engines true
          yarn --frozen-lockfile
          yarn build
          yarn install --prod --force --frozen-lockfile
          
    - name: Upload artifacts
      uses: Burnett01/rsync-deployments@4.0
      with:
        remote_host: ${{secrets.DEPLOY_URL}}
        remote_user: ${{secrets.DEPLOY_USER}}
        remote_path: ${{secrets.STAGING_PATH}}
        switches: -avzr --delete --exclude '.git*' --exclude 'tsconfig.json' --exclude '.vscode' --exclude '**/tsconfig.json' --exclude '.prettierrc' --exclude '**/.git*'
        remote_key: ${{secrets.PRIVATE_KEY}}
        
    - name: Run SSH command
      uses: garygrossgarten/github-action-ssh@v0.5.0
      with:
        command: bash ~/staging.sh
        host: ${{secrets.DEPLOY_URL}}
        username: ${{secrets.DEPLOY_USER}}
        privateKey: ${{secrets.PRIVATE_KEY}}
        
    - name: Update deployment status (success)
        if: ${{ success() }}
        uses: chrnorm/deployment-status@releases/v1
        with:
          token: "${{ github.token }}"
          target_url: https://staging.jmmedia.nl
          state: "success"
          deployment_id: ${{ steps.deployment.outputs.deployment_id }}

      - name: Update deployment status (failure)
        if: ${{ failure() }}
        uses: chrnorm/deployment-status@releases/v1
        with:
          token: "${{ github.token }}"
          target_url: https://staging.jmmedia.nl
          state: "failure"
          deployment_id: ${{ steps.deployment.outputs.deployment_id }}

      - name: Update deployment status (cancelled)
        if: ${{ cancelled() }}
        uses: chrnorm/deployment-status@releases/v1
        with:
          token: "${{ github.token }}"
          target_url: https://jmmedia.nl
          state: "cancelled"
          deployment_id: ${{ steps.deployment.outputs.deployment_id }}
